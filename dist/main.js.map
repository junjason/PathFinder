{"version":3,"file":"main.js","mappings":"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","sources":["webpack://pathfinder/./src/scripts/grid.js","webpack://pathfinder/./src/scripts/route.js","webpack://pathfinder/./src/index.js"],"sourcesContent":["class Grid {\n    constructor(gridContainer) {\n        this.gridContainer = gridContainer;\n        this.createGrid();\n        this.initializeStartAndEnd();\n    }\n\n    createGrid() {\n        const numRows = 23;\n        const numCols = 46;\n        let floor = document.createElement(\"table\");      // for each floor, create a table\n        floor.classList.add(`table`);\n        for(let j = 0; j < numRows; j++) {\n            let row = document.createElement(\"tr\");       // for each row, create row and add into table\n            row.classList.add(`row-${j}`);                            // add a class of row {row#}\n            for(let k = 0; k < numCols; k++) {\n                let node = document.createElement(\"td\");\n                node.classList.add(`n-${j}-${k}`);\n                node.classList.add(\"node\");\n                node.dataset.status = \"unvisited\";\n                node.addEventListener(\"click\", () => {\n                    if (node.dataset.status === \"wall\") {\n                        node.dataset.status = \"unvisited\"\n                        node.style.backgroundColor = \"white\";\n                    }\n                    else if (node.dataset.status === \"unvisited\") {\n                        node.dataset.status = \"wall\"\n                        node.style.backgroundColor = \"black\";\n                    }\n                });\n                row.appendChild(node);\n            }\n            floor.appendChild(row);\n        }\n        this.gridContainer.appendChild(floor);\n    }\n\n    initializeStartAndEnd() {\n        let start = document.querySelector(\".n-11-11\");\n        let end = document.querySelector(\".n-11-31\");\n\n        start.classList.add(\"start\");\n        end.classList.add(\"end\");\n        start.dataset.status = \"start\";\n        end.dataset.status = \"end\";\n\n        // Make the icons draggable\n        start.draggable = true;\n        end.draggable = true;\n\n        start.innerHTML = \"<i class=\\\"fas fa-location-arrow\\\"></i>\";\n        end.innerHTML = \"<i class=\\\"far fa-times-circle\\\"></i>\";\n\n        // Add dragstart event listener for the icons\n        this.gridContainer.addEventListener(\"dragstart\", (event) => {\n            const targetElement = event.target;\n        \n            if (targetElement === start) {\n                event.dataTransfer.setData(\"text\", \"start\");\n            } else if (targetElement === end) {\n                event.dataTransfer.setData(\"text\", \"end\");\n            }\n        });\n\n        // Add drop event listener for the grid cells\n        this.gridContainer.addEventListener(\"dragover\", (event) => {\n            event.preventDefault();\n        });\n\n        this.gridContainer.addEventListener(\"drop\", (event) => {\n            event.preventDefault();\n            const data = event.dataTransfer.getData(\"text\");\n            if (data === \"start\") {\n                const targetNode = event.target;\n                if (!targetNode.classList.contains(\"node\")) return;\n                targetNode.innerHTML = start.innerHTML; // Update the icon visually\n                start.innerHTML = \"\"; // Clear the previous icon\n                targetNode.classList.add(\"start\");\n                start.classList.remove(\"start\");\n                targetNode.draggable = true; // Set draggable to true again\n                start.draggable = false;\n                start = document.querySelector(\".start\");\n            } else if (data === \"end\") {\n                const targetNode = event.target;\n                if (!targetNode.classList.contains(\"node\")) return;\n                targetNode.innerHTML = end.innerHTML; // Update the icon visually\n                end.innerHTML = \"\"; // Clear the previous icon\n                targetNode.classList.add(\"end\");\n                end.classList.remove(\"end\");\n                targetNode.draggable = true; // Set draggable to true again\n                end.draggable = false;\n                end = document.querySelector(\".end\");\n            }\n        });\n\n        \n    }\n\n    resetBoard() {\n        this.gridContainer.innerHTML = \"\";\n        this.createGrid();\n        this.initializeStartAndEnd();\n    }\n\n    \n}\n\nexport default Grid;","class Route {\n    constructor(grid, start, end) {\n        this.grid = grid;\n        this.start = start;\n        this.end = end;\n        this.visitedInOrder = [];\n        this.routeFromStartToEnd = [];\n    }\n\n    // finds BFS - logic only\n    runBFS() {\n        let queue = [];\n        let visited = new Set();\n        queue.push(this.start);\n        this.visitedInOrder = [];\n\n        // debugger;\n        while (queue.length !== 0) {\n            let next = queue.shift();\n            // if next === end\n            if (this.getPos(next).join(\"-\") === this.getPos(this.end).join(\"-\")) {\n                this.animateVisited();\n                return true;\n            }\n            \n            // if not, visit all the neighbors + add them to the queue\n            let nextPos = this.getPos(next);\n\n            // visit east\n            let left = document.querySelector(`.n-${nextPos[0]}-${parseInt(nextPos[1])+1}`);\n            if (left && !visited.has(this.getPos(left).join(\"-\")) && left.dataset.status !== \"wall\") {\n                left.classList.add(\"cookie-west\");\n                this.visitedInOrder.push(left);\n                queue.push(left);\n                visited.add(this.getPos(left).join(\"-\"));\n                if (left.dataset.status !== \"end\" || left.dataset.status !== \"start\") left.dataset.status = \"visited\";\n            }\n            \n            // visit south\n            let down = document.querySelector(`.n-${parseInt(nextPos[0])+1}-${nextPos[1]}`);\n            if (down && !visited.has(this.getPos(down).join(\"-\")) && down.dataset.status !== \"wall\") {\n                down.classList.add(\"cookie-north\");\n                this.visitedInOrder.push(down);\n                queue.push(down);\n                visited.add(this.getPos(down).join(\"-\"));\n                if (down.dataset.status !== \"end\" || down.dataset.status !== \"start\") down.dataset.status = \"visited\";\n            }\n\n            // visit west\n            let right = document.querySelector(`.n-${nextPos[0]}-${parseInt(nextPos[1])-1}`);\n            if (right && !visited.has(this.getPos(right).join(\"-\")) && right.dataset.status !== \"wall\") {\n                right.classList.add(\"cookie-east\");\n                this.visitedInOrder.push(right);\n                queue.push(right);\n                visited.add(this.getPos(right).join(\"-\"));\n                if (right.dataset.status !== \"end\" || right.dataset.status !== \"start\") right.dataset.status = \"visited\";\n            }\n\n            // visit north\n            let up = document.querySelector(`.n-${parseInt(nextPos[0])-1}-${nextPos[1]}`);\n            if (up && !visited.has(this.getPos(up).join(\"-\")) && up.dataset.status !== \"wall\") {\n                up.classList.add(\"cookie-south\");\n                this.visitedInOrder.push(up);\n                queue.push(up);\n                visited.add(this.getPos(up).join(\"-\"));\n                if (up.dataset.status !== \"end\" || up.dataset.status !== \"start\") up.dataset.status = \"visited\";\n            }\n        }\n        this.animateVisited();\n        return false;\n    }\n\n    runDFS() {\n        let stack = [];\n        let visited = new Set();\n        stack.push(this.start);\n        this.visitedInOrder = [];\n\n        while (stack.length !== 0) {\n            let next = stack.pop();\n            // if next === end\n            if (this.getPos(next).join(\"-\") === this.getPos(this.end).join(\"-\")) {\n                this.animateVisited();\n                return true;\n            }\n            // if not, visit all the neighbors + add them to the queue\n            let nextPos = this.getPos(next);\n\n            // visit east\n            let left = document.querySelector(`.n-${nextPos[0]}-${parseInt(nextPos[1])+1}`);\n            if (left && !visited.has(this.getPos(left).join(\"-\"))) {\n                left.classList.add(\"cookie-west\");\n                this.visitedInOrder.push(left);\n                stack.push(left);\n                visited.add(this.getPos(left).join(\"-\"));\n            }\n            \n            // visit south\n            let down = document.querySelector(`.n-${parseInt(nextPos[0])+1}-${nextPos[1]}`);\n            if (down && !visited.has(this.getPos(down).join(\"-\"))) {\n                down.classList.add(\"cookie-north\");\n                this.visitedInOrder.push(down);\n                stack.push(down);\n                visited.add(this.getPos(down).join(\"-\"));\n            }\n\n            // visit west\n            let right = document.querySelector(`.n-${nextPos[0]}-${parseInt(nextPos[1])-1}`);\n            if (right && !visited.has(this.getPos(right).join(\"-\"))) {\n                right.classList.add(\"cookie-east\");\n                this.visitedInOrder.push(right);\n                stack.push(right);\n                visited.add(this.getPos(right).join(\"-\"));\n            }\n\n            // visit north\n            let up = document.querySelector(`.n-${parseInt(nextPos[0])-1}-${nextPos[1]}`);\n            if (up && !visited.has(this.getPos(up).join(\"-\"))) {\n                up.classList.add(\"cookie-south\");\n                this.visitedInOrder.push(up);\n                stack.push(up);\n                visited.add(this.getPos(up).join(\"-\"));\n            }\n        }\n        this.animateVisited();\n        return false;\n    }\n\n    getPos(node) {\n        let classes = node.className;\n        let classNames = classes.split(\" \");\n        let coordinates = classNames[0];\n        let pos = coordinates.split(\"-\");\n        let x = pos[1];\n        let y = pos[2];\n        return [x,y];\n    }\n\n    animateVisited() {\n        for (let i = 0; i < this.visitedInOrder.length; i++) {\n            // debugger;\n            setTimeout(() => {\n                this.visitedInOrder[i].classList.add(\"visited-anim\");\n            }, 25*i);\n        }\n    }\n\n    backTrack() {\n        // start at end node + use cookies to find path from end to start\n        let currentNode = this.end;\n        this.routeFromStartToEnd = [];\n        while (this.getPos(currentNode).join(\"-\") !== this.getPos(this.start).join(\"-\")) {\n            // console.log(\"hi\")\n            // debugger;\n            this.routeFromStartToEnd.push(currentNode);\n            let currPos = this.getPos(currentNode);\n\n            // came from south, go south\n            if (currentNode.classList.contains(\"cookie-south\")) {\n                let down = document.querySelector(`.n-${parseInt(currPos[0])+1}-${currPos[1]}`);\n                currentNode = down;\n            }\n            else if (currentNode.classList.contains(\"cookie-north\")) {\n                let up = document.querySelector(`.n-${parseInt(currPos[0])-1}-${currPos[1]}`);\n                currentNode = up;\n            }\n            else if (currentNode.classList.contains(\"cookie-east\")) {\n                let right = document.querySelector(`.n-${currPos[0]}-${parseInt(currPos[1])+1}`);\n                currentNode = right;\n            }\n            else if (currentNode.classList.contains(\"cookie-west\")) {\n                let left = document.querySelector(`.n-${currPos[0]}-${parseInt(currPos[1])-1}`);\n                currentNode = left;\n            }            \n        }\n        this.routeFromStartToEnd.push(currentNode);\n        this.routeFromStartToEnd.reverse();\n        this.animateBackTrack();\n    }\n\n    animateBackTrack() {\n        for (let i = 0; i < this.routeFromStartToEnd.length; i++) {\n            // debugger;\n            setTimeout(() => {\n                this.routeFromStartToEnd[i].style.backgroundColor = 'yellow';\n            }, 25*i);\n        }\n    }\n}\n\nexport default Route;","import Grid from \"./scripts/grid\";\nimport Route from \"./scripts/route\";\n\nlet grid = null;\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    // console.log(\"Hello from index.js\");\n    const gridContainer = document.querySelector(\".grid-container\");\n    grid = new Grid(gridContainer);\n\n    let visualizeBFS = document.querySelector(\".visualizeBFS\");\n    let visualizeDFS = document.querySelector(\".visualizeDFS\");\n\n    visualizeBFS.addEventListener(\"click\", () => {\n        let start = document.querySelector(\".start\");\n        let end = document.querySelector(\".end\");\n        let route = new Route(grid, start, end);\n        let pathFound = route.runBFS();\n        if (pathFound) route.backTrack();\n    });\n\n    visualizeDFS.addEventListener(\"click\", () => {\n        let start = document.querySelector(\".start\");\n        let end = document.querySelector(\".end\");\n        let route = new Route(grid, start, end);\n        let pathFound = route.runDFS();\n        if (pathFound) route.backTrack();\n    });\n\n    let clearBoard = document.querySelector(\".resetBoard\")\n    clearBoard.addEventListener(\"click\", () => {\n        grid.resetBoard();\n    })\n});\n\n\n\n\n\n\n\n\n\n"],"names":["constructor","gridContainer","this","createGrid","initializeStartAndEnd","floor","document","createElement","classList","add","j","row","k","node","dataset","status","addEventListener","style","backgroundColor","appendChild","start","querySelector","end","draggable","innerHTML","event","targetElement","target","dataTransfer","setData","preventDefault","data","getData","targetNode","contains","remove","resetBoard","grid","visitedInOrder","routeFromStartToEnd","runBFS","queue","visited","Set","push","length","next","shift","getPos","join","animateVisited","nextPos","left","parseInt","has","down","right","up","runDFS","stack","pop","pos","className","split","i","setTimeout","backTrack","currentNode","currPos","reverse","animateBackTrack","Grid","visualizeBFS","visualizeDFS","route","Route"],"sourceRoot":""}